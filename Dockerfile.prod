# Production Dockerfile for Next.js
FROM node:20-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install pnpm with specific version for consistency
RUN corepack enable && corepack prepare pnpm@10.11.1 --activate

# Copy dependency files
COPY package.json pnpm-lock.yaml* ./

# Install only production dependencies
RUN pnpm install --frozen-lockfile --prod

# Builder stage
FROM node:20-alpine AS builder
WORKDIR /app

# Install pnpm with specific version
RUN corepack enable && corepack prepare pnpm@10.11.1 --activate

# Copy all dependency files first
COPY package.json pnpm-lock.yaml* ./

# Install all dependencies (including dev) for building
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application with standalone output
ENV NEXT_TELEMETRY_DISABLED 1
RUN pnpm build

# Runner stage
FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy necessary files
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000

CMD ["node", "server.js"]